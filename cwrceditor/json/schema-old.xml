<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    CANADIAN WRITING AND RESEARCH COLLABORATORY - ENTITY SCHEMA
    Based on elements of EAC - CPF, MADS, and ISAAR schemas
    
    Schema Type: Relax NG Schema XML
    
    Version: 2012
    
    Date: 20120305
    
    Summary: The present CWRC Entity Schema outlines a format for the description of persons, corporate bodies,
    places, titles (frbr:work), and event entities. It is based on concepts from ISAAR(CPF) and
    EAC-CFP standards, and designed for implementation within the Fedora Commons framework.
    Most administrative metadata (equivalent to EAC-CPF\'s <control> element) should be captured in
    Fedora Object datastreams such as object properties, AUDIT, RELS-EXT (object-level relations),
    or worlkflow. Content-level relations are captured in the entity record itself.
    
    **********
    Release Notes: V01. First version includes definition of person and organization entity types.
    Subsequent versions will model places, titles (frbr:work), and event entities.
    ********** 
    
    **********
    For comments, questions, and suggestions please contact Susan Brown, CWRC project leader
    (sbrown@uoguelph.ca) or Mariana Paredes-Olea, CWRC Metadata Coordinator (paredeso@ualberta.ca)
    **********    
-->

<!-- PENDING WORK:
    decide whether to keep localType elements
    
    to be implemented:
        gender
        occupation
        noteTypes
        authorizedForm?
        mandate?
        useDates?
        certainty - granularize
        source - granularize
        note - granularize
        languageUsed
        activity (different from occupation, see cpf)
        relation types: family, parent, child, sibling, associative (see cpfRelation and
        @cpfRelationType)        
        position?
        research interests?
        
    check interoperability with FOAF
    
    alphabetize values
    value element names
        
    modularize conditional validation of entityType patterns
    check composition of entityType, like id
        
    implement certainty in possible triples
-->

<grammar xmlns="http://relaxng.org/ns/structure/1.0"
    xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
    <start>
        <choice>
            <ref name="cwrc-element"/>
            <ref name="entity-element"/>
        </choice>
    </start>



    <define name="cwrc-element">
        <element name="cwrc">
            <a:documentation>Group of CWRC records</a:documentation>
            <optional>
                <ref name="id-attribute"/>
            </optional>
            <oneOrMore>
                <ref name="entity-element"/>
            </oneOrMore>
        </element>
    </define>



    <define name="entity-element">
        <element name="entity">
            <a:documentation>CWRC entity record</a:documentation>
            <optional>
                <ref name="id-attribute"/>
            </optional>
            <interleave>
                <ref name="recordInfo-element"/>
                <ref name="identity-element"/>
                <optional>
                    <ref name="description-element"/>
                </optional>
            </interleave>
            <!--<ref name="relations-element"/>-->
            <!-- mpo: define -->
        </element>
    </define>



    <define name="recordInfo-element">
        <element name="recordInfo">
            <a:documentation>Captures record-level information. Components of
                this element are kept to a minimum given that administrative and
                object-level metadata is captured in other FOXML
                datastreams.</a:documentation>
            <optional>
                <ref name="id-attribute"/>
            </optional>
            <interleave>
                <zeroOrMore>
                    <ref name="projectId-element"/>
                    <!-- mpo: check if optional -->
                </zeroOrMore>
                <optional>
                    <ref name="entityId-element"/>
                    <!-- mpo: change to mandatory -->
                </optional>
            </interleave>
        </element>
    </define>



    <define name="identity-element">
        <element name="identity">
            <a:documentation>A container element grouping data for
                identification of a CWRC entity instance</a:documentation>
            <optional>
                <ref name="id-attribute"/>
            </optional>
            <interleave>
                <optional>
                    <ref name="person-pattern"/>
                    <!-- mpo: schema portion to be
                    changed to allow for dynamic selection of patterns depending
                    on entity type-->
                    <!--<choice>
                    <ref name="person-pattern"/>
                    <!-\-<ref name="org-pattern"/>-\->
                    <!-\-<ref name="title-pattern"/>
                    <ref name="place-pattern"/>
                    <ref name="event-pattern"/>-\->
                    <!-\- other named entity -\->
                    <!-\- biological species? darwinCore? -\->
                    <!-\- vocabularies? -\->
                    </choice>-->
                </optional>
                <ref name="entityType-element"/>
                <ref name="preferredForm-element"/>
                <!-- mpo: old "authorityLabel" -->
                <optional>
                    <ref name="variantForms-element"/>
                </optional>
                <zeroOrMore>
                    <ref name="sameAs-element"/>
                </zeroOrMore>
            </interleave>
        </element>
    </define>



    <define name="description-element">
        <!-- dates, occupations, variant names, nationalities,
        gender?, notes, laguageUsed, activity?, etc. -->
        <element name="description">
            <!--<optional>
                <ref name="id-attribute"/>
            </optional>-->
            <interleave>
                <optional>
                    <ref name="existDates-element"/>
                </optional>
                <optional>
                    <ref name="descriptiveNotes-element"/>
                </optional>
            </interleave>
        </element>
    </define>


    <!--<define name="relations-element">
        <optional>
            <element name="relations"></element>
        </optional>
    </define>-->

    <!--<group>
        <element name="entityType"> 
        <choice>
        <value>person</value>
        <value>organization</value>
        <value>title</value>
        <value>place</value>
        <value>event</value>
        </choice>
        </element>            
        <zeroOrMore>
        <element name="personType"> <!-\- mpo: to be changed - add parameter to select customType (personType, orgType,
        etc.) depending on entityType-\->
        <data type="NMTOKEN"/>
        </element>
        </zeroOrMore>
        </group>-->


    <define name="projectId-element">
        <element name="projectId">
            <a:documentation>Similar to EAC-CPF\'s agencyCode. In CWRC\'s
                context, projectId captures an identifieer for the originating
                project, but subsequent modifications should be captured in
                FOXML\'s datastreams</a:documentation>
            <xs:annotation>
                <xs:appinfo>

                    <interface-field path="entity/recordInfo/projectId">
                        <label xml:lang="en">Originating Project</label>
                        <help-text xml:lang="en">Select one or more project
                            identifiers to associate the present entity record
                            with a project.</help-text>
                        <input>textField</input>
                        <!-- mpo: ideally dynamic
                            dropDown (combobox) populated with cwrc project
                            identifiers and option to enter text -->
                        <!-- mpo: to be changed to drop-down once we get project ids from Fedora -->
                    </interface-field>

                    <interface-field
                        path="entity/identity/variantForms/variant/authorizedBy/projectId">
                        <help-text xml:lang="en">Specify projects or sources
                            that flag this name as preferred form.</help-text>
                        <label xml:lang="en">Name authorized by:</label>
                        <input>textField</input>
                        <!-- mpo: ideally dynamic
                            dropDown (combobox) populated with cwrc project
                            identifiers and option to enter text -->
                    </interface-field>

                </xs:appinfo>
            </xs:annotation>
            <optional>
                <ref name="id-attribute"/>
            </optional>
            <data type="NCName"/>
        </element>
    </define>



    <define name="entityId-element">
        <element name="entityId">
            <optional>
                <ref name="id-attribute"/>
            </optional>
            <data type="NMTOKEN"/>
        </element>
    </define>



    <define name="preferredForm-element">
        <element name="preferredForm">
            <a:documentation>An element used to indicate which recorded entity
                name is the preferred one for display purposes in a given
                context.</a:documentation>
            <xs:annotation>
                <xs:appinfo>

                    <interface-field path="entity/identity/preferredForm">
                        <label xml:lang="en">Preferred Name</label>
                        <help-text xml:lang="en">Use this field to indicate a
                            preferred name to identify an entity (for display
                            purposes).</help-text>
                    </interface-field>

                </xs:appinfo>
            </xs:annotation>
            <optional>
                <ref name="id-attribute"/>
            </optional>
            <oneOrMore>
                <ref name="namePart-element"/>
            </oneOrMore>
            <optional>
                <ref name="displayLabel-element"/>
            </optional>
        </element>
    </define>



    <define name="displayLabel-element">
        <element name="displayLabel">
            <text/>
        </element>
    </define>



    <define name="namePart-element">
        <element name="namePart">
            <xs:annotation>
                <xs:appinfo>

                    <interface-field
                        path="entity/identity/preferredForm/namePart">
                        <label xml:lang="en">Name Part</label>
                        <help-text xml:lang="en">Use this field to capture a
                            complete name or part of a name</help-text>
                        <input>textField</input>
                    </interface-field>

                    <interface-field
                        path="entity/identity/variantForms/variant/namePart">
                        <label xml:lang="en">Name Part</label>
                        <help-text xml:lang="en">Use this field to capture a
                            complete name or part of a name</help-text>
                        <input>textField</input>
                    </interface-field>

                </xs:appinfo>
            </xs:annotation>
            <optional>
                <ref name="id-attribute"/>
            </optional>
            <optional>
                <ref name="partType-attribute"/>
            </optional>
            <text/>
        </element>
    </define>



    <define name="partType-attribute">
        <attribute name="partType">
            <a:documentation/>
            <xs:annotation>
                <xs:appinfo>

                    <interface-field
                        path="entity/identity/preferredForm/namePart/@partType">
                        <help-text xml:lang="en">Optional. Select a type of name
                            part from the list.</help-text>
                        <label xml:lang="en">Name Part Type</label>
                        <input>dropDown</input>
                    </interface-field>

                    <interface-field
                        path="entity/identity/variantForms/variant/namePart/@partType">
                        <help-text xml:lang="en">Optional. Select a type of name
                            part from the list.</help-text>
                        <label xml:lang="en">Name Part Type</label>
                        <input>dropDown</input>
                    </interface-field>

                </xs:appinfo>
            </xs:annotation>
            <choice>
                <value a:en="surname">surname</value><a:documentation>e. g. Monica</a:documentation>
                <value a:en="forename">forename</value><a:documentation>e. g. Johnson</a:documentation>
                <value a:en="date">date</value><a:documentation>e. g. fl. 1780</a:documentation>
                <value a:en="salutation">salutation</value><a:documentation>e. g. Ms.</a:documentation>
                <value a:en="qualification">qualification</value><a:documentation>e. g. Reverend</a:documentation>
                <value a:en="initials">initials</value><a:documentation>e. g. J.C.</a:documentation>
                <value a:en="suffix">suffix</value><a:documentation>e. g. Jr.</a:documentation>
            </choice>
        </attribute>
    </define>



    <define name="variantType-element">
        <element name="variantType">

            <xs:annotation>
                <xs:appinfo>

                    <interface-field
                        path="entity/identity/variantForms/variant/variantType">
                        <help-text xml:lang="en">If applicable, select a name
                            type to describe contexts in which this name was
                            used to refer to the present entity.</help-text>
                        <label xml:lang="en">Variant Name Type</label>
                        <input>dropDown</input>
                    </interface-field>

                </xs:appinfo>
            </xs:annotation>

            <optional>
                <ref name="id-attribute"/>
            </optional>
            <choice>
                <value a:en="Birth Name">birthName</value>
                <value a:en="Married Name">marriedName</value>
                <value a:en="Indexed Name">indexedName</value>
                <value a:en="Pseudonym">pseudonym</value>
                <value a:en="Used Form">usedForm</value>
                <value a:en="Nickname">nickname</value>
                <value a:en="Reigious">religiousName</value>
                <value a:en="Royal">royalName</value>
                <value a:en="Self Constructed">selfConstructedName</value>
                <value a:en="Styled">styledName</value>
                <value a:en="Titled">titledName</value>
                <value a:en="Acronym">acronym</value>
            </choice>
        </element>
    </define>



    <define name="existDates-element">
        <element name="existDates">

            <xs:annotation>
                <xs:appinfo>

                    <interface-field path="entity/description/existDates">
                        <help-text xml:lang="en">If known, enter dates of
                            existence (i.e. birth, death, fl., etc.), of the
                            present entity.</help-text>
                        <label xml:lang="en">Dates of Existence</label>
                        <input xml:id="existDates-element" label="Add"
                            >dialogue</input>
                    </interface-field>

                </xs:appinfo>
            </xs:annotation>

            <optional>
                <ref name="id-attribute"/>
            </optional>
             <oneOrMore>
                <choice>
                    <ref name="dateSingle-element"/>
                    <ref name="dateRange-element"/>
                </choice>
            </oneOrMore>
        </element>
    </define>



    <define name="person-pattern">
        <ref name="personTypes-element"/>
    </define>



    <define name="entityType-element">
        <element name="entityType">
            <choice>
                <value>person</value>
                <value>organization</value>
                <value>title</value>
                <value>place</value>
                <value>event</value>
                <value>biological species</value>
                <value>abstract concept</value>
                <value>other named entity</value>
            </choice>
        </element>
    </define>



    <define name="personTypes-element">
        <element name="personTypes">
            <a:documentation>Captures generic person types defined by each
                project. Based on WEAC-CPF\'s @localType.</a:documentation>
            <!-- mpo: to be changed - add parameter to select customType (personType, orgType,
                etc.) depending on entityType-->
            <optional>
                <ref name="id-attribute"/>
            </optional>
            <oneOrMore>
                <ref name="personType-element"/>
            </oneOrMore>
        </element>
    </define>

    <define name="personType-element">
        <element name="personType">
            <a:documentation>Captures generic person types defined by each
                project. Based on WEAC-CPF\'s @localType.</a:documentation>
            <xs:annotation>
                <xs:appinfo>

                    <interface-field
                        path="entity/identity/personTypes/personType">
                        <help-text xml:lang="en">Generic person types defined by
                            projects. Select a category from the list or specify
                            a custom value.</help-text>
                        <label xml:lang="en">Person Type</label>
                        <input>dynamicCheckbox</input>
                    </interface-field>

                </xs:appinfo>
            </xs:annotation>
            <choice>
                <value a:fr="" a:en="Writer">writer</value>                
                <value a:fr="" a:en="Canada's Early Women
                    Writer">ceww:earlyWomenWriter</value><!-- check with Carole
                        Gerson -->
                <value a:fr="" a:en="British Woman Writer (Orlando)">orl:BWW</value>
                <value a:fr="" a:en="International-British Women Writer (Orlando)">orl:IBW</value>
                <value a:fr="" a:en="International Women Writer (Orlando)">orl:IWW</value>
                <value a:fr="" a:en="Male Writer (Orlando)">orl:MW</value>
                <value a:fr="" a:en="Creator">canwwr:creator</value>
                <value a:fr="" a:en="Critic">canwwr:critic</value><!-- mpo: check with P Demers -->
                <data type="string"/>
            </choice>
        </element>
    </define>



    <!--<define name="org-pattern">
        <interleave>
            <element name="entityType">
                <value>organization</value>                    
            </element>
            <element name="orgTypes">
                <!-\- mpo: to be changed - add parameter to select customType (personType, orgType,
                    etc.) depending on entityType-\->
                <oneOrMore>
                    <element name="orgType">
                        <a:documentation>Captures generic organization types. Based on EAC-CPF\'s @localType.</a:documentation>
                        <optional>
                            <ref name="id-attribute"/>
                        </optional>
                        <choice>                        
                            <value>labour</value>
                            <value>club or society</value>
                            <value>political</value>
                            <value>academic</value>
                            <value>research</value>
                            <value>corporate</value><!-\- commercial? (img) -\->
                            <!-\-<value>financial</value>-\->
                            <value>activist</value>
                            <!-\-<value>non-governmental</value>-\->
                            <value>governmental</value>
                            <value>military</value>
                            <value>law-enforcement</value>
                            <value>professional</value>
                            <!-\-<value>criminal</value>-\->
                            <value>sporting</value>
                            <value>medical</value>
                            <value>altruistic</value> <!-\- charitable? (img) -\->
                            <value>non-profit</value>
                            <!-\-<value>cultural</value>-\->
                            <value>artistic</value>
                            <value>dramatic</value>
                            <value>ethnic</value>
                            <value>literary</value>
                            <value>musical</value>
                            <value>religious</value>
                            <value>publishing</value>
                            <data type="string"/> <!-\- mpo: check -\->                
                        </choice>
                    </element>
                </oneOrMore>
            </element>
        </interleave>
    </define>-->

    <!--<define name="title-pattern">
        <element name="entityType">
            <value>title</value>
        </element>            
        <zeroOrMore>
            <element name="titleType"> <!-\- mpo: to be changed - add parameter to select customType (personType, orgType,
            etc.) depending on entityType-\->
                <optional>
                    <ref name="id-attribute"/>
                </optional>
                <data type="NMTOKEN"/><!-\- mpo: specify types? -\->
            </element>
        </zeroOrMore>
    </define>
    
    <define name="place-pattern">
        <element name="entityType">
            <value>place</value>
        </element>            
        <zeroOrMore>
            <element name="placeType"> <!-\- mpo: to be changed - add parameter to select customType (personType, orgType,
            etc.) depending on entityType-\->
                <optional>
                    <ref name="id-attribute"/>
                </optional>
                <data type="NMTOKEN"/> <!-\- mpo: specify types by project or based on authority?-\->
            </element>
        </zeroOrMore>
    </define>
    
    <define name="event-pattern">
        <element name="entityType">
            <value>event</value>
        </element>
        <zeroOrMore>
            <element name="eventType"> <!-\- mpo: to be changed - add parameter to select type (personType, orgType,
            etc.) depending on entityType-\->
                <optional>
                    <ref name="id-attribute"/>
                </optional>
                <data type="NMTOKEN"/>
            </element>
        </zeroOrMore>
    </define>-->

    <define name="sameAs-element">

        <element name="sameAs">
            <xs:annotation>
                <xs:appinfo> <interface-field path="entity/identity/sameAs">
                        <help-text xml:lang="en">Enter a link to a resource that
                            contains information about this entity (e. g. a
                            Wikipedia article about the person, organization,
                            title, place, or event that is subject of the
                            present record). This field is also useful to
                            declare that the present entity likely refers to the
                            same entity represented in another
                            resource.</help-text>
                        <label xml:lang="en">Same as person described in</label>
                        <input>textField</input>
                    </interface-field> </xs:appinfo>
            </xs:annotation>
            <optional>
                <ref name="id-attribute"/>
            </optional>
            <optional>
                <ref name="cert-attribute"/>
            </optional>
            <data type="anyURI"/>
        </element>
    </define>



    <define name="cert-attribute">
        <!-- mpo: check if attribute or element -->
        <attribute name="cert" a:defaultValue="definite">

            <xs:annotation>
                <xs:appinfo>

                    <interface-field path="entity/identity/sameAs/@cert">
                        <help-text xml:lang="en">By selecting a certainty level
                            you can specify an approximate degree of confidence
                            on a given piece of information about this
                            entity.</help-text>
                        <label xml:lang="en">Certainty</label>
                        <input>slider</input>
                        <defaultValue xml:lang="en">definite</defaultValue>
                    </interface-field>

                    <interface-field
                        path="entity/identity/existDates/dateSingle/@cert">
                        <help-text xml:lang="en">By selecting a certainty level
                            you can specify an approximate degree of confidence
                            on a given piece of information about this
                            entity.</help-text>
                        <label xml:lang="en">Certainty</label>
                        <input>slider</input>
                        <defaultValue xml:lang="en">definite</defaultValue>
                    </interface-field>

                    <interface-field
                        path="entity/identity/existDates/dateRange/@cert">
                        <help-text xml:lang="en">By selecting a certainty level
                            you can specify an approximate degree of confidence
                            on a given piece of information about this
                            entity.</help-text>
                        <label xml:lang="en">Certainty</label>
                        <input>slider</input>
                        <defaultValue xml:lang="en">definite</defaultValue>
                    </interface-field>

                </xs:appinfo>
            </xs:annotation>

            <choice>
                <value a:en="definite" a:fr="">4</value>
                <value a:en="reasonably certain" a:fr="">3</value>
                <value a:en="probable" a:fr="">2</value>
                <value a:en="speculative" a:fr="">1</value>
            </choice>
        </attribute>
    </define>


    <define name="dateSingle-element">
        <element name="dateSingle">

            <xs:annotation>
                <xs:appinfo>

                    <interface-field xml:idref="existDates"
                        path="entity/identity/existDates/dateSingle">
                        <label xml:lang="en">Single Date</label>
                    </interface-field>

                </xs:appinfo>
            </xs:annotation>

            <optional>
                <ref name="id-attribute"/>
            </optional>
            <optional>
                <ref name="cert-attribute"/>
            </optional>
            <interleave>
                <ref name="date-pattern"/>
            </interleave>
        </element>
    </define>



    <define name="dateRange-element">
        <element name="dateRange">

            <xs:annotation>
                <xs:appinfo>

                    <interface-field xml:idref="existDates"
                        path="entity/identity/existDates/dateRange">
                        <label xml:lang="en">Date Range</label>
                    </interface-field>

                </xs:appinfo>
            </xs:annotation>

            <optional>
                <ref name="id-attribute"/>
            </optional>
            <optional>
                <ref name="cert-attribute"/>
            </optional>
            <interleave>
                <optional>
                    <ref name="fromDate-element"/>
                </optional>
                <optional>
                    <ref name="toDate-element"/>
                </optional>
            </interleave>
        </element>
    </define>



    <define name="fromDate-element">
        <element a:id="fromDate" name="fromDate">
            <optional>
                <ref name="id-attribute"/>
            </optional>
            <ref name="date-pattern"/>
        </element>
    </define>



    <define name="toDate-element">
        <element a:id="toDate" name="toDate">
            <optional>
                <ref name="id-attribute"/>
            </optional>
            <ref name="date-pattern"/>
        </element>
    </define>



    <define name="date-pattern">
        <optional>
            <attribute name="notBefore">
                <ref name="standardDate-data"/>
            </attribute>
        </optional>
        <optional>
            <attribute name="notAfter">
                <ref name="standardDate-data"/>
            </attribute>
        </optional>
        <interleave>
            <ref name="standardDate-element"/>
            <optional>
                <ref name="textDate-element"/>
            </optional>
            <optional>
                <ref name="dateType-element"/>
            </optional>
            <optional>
                <ref name="note-element"/>
            </optional>
        </interleave>
    </define>



    <define name="standardDate-element">
        <element name="standardDate">

            <xs:annotation>
                <xs:appinfo>

                    <interface-field xml:idref="dateSingle"
                        path="entity/description/existDates/dateSingle/standardDate">
                        <help-text xml:lang="en">Select a date from date picker
                            or enter a date in the format yyyy-mm-dd, yyyy-mm,
                            or yyyy.</help-text>
                        <input>datePicker</input>
                    </interface-field>

                    <interface-field xml:idref="dateRange"
                        path="entity/description/existDates/dateRange/fromDate/standardDate">
                        <help-text xml:lang="en">If known, add date ranges of
                            existence (i.e. birth, death, fl.,
                            etc.).</help-text>
                        <label xml:lang="en">From</label>
                        <input>datePicker</input>
                    </interface-field>

                    <interface-field xml:idref="dateRange"
                        path="entity/description/existDates/dateRange/toDate/standardDate">
                        <help-text xml:lang="en">If known, add date ranges of
                            existence (i.e. birth, death, fl.,
                            etc.).</help-text>
                        <label xml:lang="en">To</label>
                        <input>datePicker</input>
                    </interface-field>

                </xs:appinfo>
            </xs:annotation>

            <ref name="standardDate-data"/>
        </element>
    </define>



    <define name="textDate-element">
        <element name="textDate">

            <!--<<xs:annotation>
                xs:appinfo><!-\- mpo: ask Omar if we need to declare this,
                    and if so, do we need the three declarations? -\->
                    
                    <interface-field xml:idref="dateSingle">
                        <path>entity/description/existDates/dateSingle/textDate</path>
                        <help-text xml:lang="en">Date in text format.</help-text>
                        <label xml:lang="en">Date Text</label>
                        <input>textField</input>
                    </interface-field>
                    
                    <interface-field xml:idref="dateRange">
                        <path>entity/description/existDates/dateRange/fromDate/textDate</path>
                        <help-text xml:lang="en">Date in text format.</help-text>
                        <label xml:lang="en">Date Text</label>
                        <input>textField</input>
                    </interface-field>
                    
                    
                    <interface-field xml:idref="dateRange">
                        <path>entity/description/existDates/dateRange/toDate/textDate</path>
                        <help-text xml:lang="en">If known, add date ranges of existence
                            (i.e. birth, death, fl., etc.).</help-text>
                        <label xml:lang="en">Date Text</label>
                        <input>textField</input>
                    </interface-field>
                    
                </xs:appinfo>
            </xs:annotation>-->

            <text/>
        </element>
    </define>



    <define name="dateType-element">
        <element name="dateType">

            <xs:annotation>
                <xs:appinfo>

                    <interface-field xml:idref="dateSingle"
                        path="entity/description/existDates/dateSingle/dateType">
                        <help-text xml:lang="en">Select a term from the list or
                            add a custom keyword that best describes the context
                            in which this date is relevant to the present
                            entity.</help-text>
                        <label xml:lang="en">Date Type</label>
                        <input>combobox</input>
                    </interface-field>

                    <interface-field xml:idref="dateRange"
                        path="entity/description/existDates/dateRange/dateType">
                        <help-text xml:lang="en">Select a term from the list or
                            add a custom keyword to best describes the context
                            in which this date is relevant to the present
                            entity.</help-text>
                        <label xml:lang="en">Date Type</label>
                        <input>combobox</input>
                    </interface-field>

                </xs:appinfo>
            </xs:annotation>

            <choice>
                <value a:fr="neé" a:en="birth">birth</value>
                <value a:fr="" a:en="death">death</value>
                <value a:fr="" a:en="marriage">marriage</value>
                <value a:fr="" a:en="flourish">flourish</value>
                <value a:fr="" a:en="circa">circa</value>
                <value a:fr="" a:en="residence">residence</value>
                <value a:fr="" a:en="travel">travel</value>
                <data type="string"/>
            </choice>
        </element>
    </define>



    <define name="standardDate-data">
        <choice>
            <data type="date"/>
            <data type="gYearMonth"/>
            <data type="gYear"/>
            <data type="dateTime"/>
            <data type="string">
                <!-- mpo: regex - orlando dates; check datatype -->
                <param name="pattern"
                    >((\d{4})\D(0[1-9]|1[0-2])\D([12]\d|0[1-9]|3[01])|(\d{4})(0[1-9]|1[0-2])([12]\d|0[1-9]|3[01]))</param>
                <!-- mpo: check if replace \d for hyphens -->
            </data>
            <data type="string">
                <param name="pattern"
                    >(\d{4})((\D(0[1-9]|1[0-2])\D)|(0[1-9]|1[0-2]))</param>
            </data>
            <data type="string">
                <param name="pattern">(\d{4})(\D{2})?</param>
            </data>
        </choice>
    </define>



    <define name="id-attribute" ns="http://www.w3.org/XML/1998/namespace">
        <attribute a:id="xmlID" name="xml:id">
            <data type="NCName">
                <!-- Because of restrictions in Relax NG, the expression of this attribute is NCName. 
                    This is not strictly conformant to the xml:id specification, though necessary in order for
                    to validate. The XML Schema version of this attribute should be defined as ID -->
            </data>
        </attribute>
    </define>



    <define name="descriptiveNotes-element">            
            <optional>
                <ref name="id-attribute"/>
            </optional>
            <oneOrMore>
                <ref name="note-element"/>
            </oneOrMore>
    </define>



    <define name="p-element">
        <element name="p">
            <text/>
        </element>
    </define>



    <define name="access-element">
        <element name="access">
            
            
            <xs:annotation>
                <xs:appinfo>
                    
                    <interface-field xml:idref="access-element" path="entity/description/existDates/note/access">
                        <label>Access</label>
                        <help-text xml:lang="en">Select access level for this note: public,
                            project, or private. If blank, default value is public.</help-text>
                        <input>radioButton</input>
                    </interface-field>
                    												  <!-- entity/description/descriptiveNotes/note -->
                    <interface-field xml:idref="access-element" path="entity/description/descriptiveNotes/note/access">
                        <label>Access</label>
                        <help-text xml:lang="en">Select access level for this note: public,
                            project, or private. If blank, default value is public.</help-text>
                        <input>radioButton</input>
                    </interface-field>
                    
                </xs:appinfo>
            </xs:annotation>
            
            <choice>
                <value a:en="public">public</value>
                <value a:en="project">project</value>
                <value a:en="private">private</value>
            </choice>
        </element>
    </define>



    <define name="note-element">
        <element name="note">

            <xs:annotation>
                <xs:appinfo>

                    <interface-field path="entity/description/existDates/dateSingle/note">
                        <help-text xml:lang="en">Enter one or more notes about
                            this date.</help-text>
                        <label xml:lang="en">Note</label>
                        <input>textArea</input>
                    </interface-field>

                    <interface-field path="entity/description/existDates/dateRange/note">
                        <help-text xml:lang="en">Enter one or more notes about
                            this date.</help-text>
                        <label xml:lang="en">Note</label>
                        <input>textArea</input>
                    </interface-field>
                    
                    <interface-field path="entity/description/descriptiveNotes/note">
                        <help-text xml:lang="en">Here you can enter a
                            descriptive summary about the present entity.</help-text>
                        <label xml:lang="en">Note</label>
                        <input>textArea</input>
                    </interface-field>

                </xs:appinfo>
            </xs:annotation>

            <optional>
                <ref name="id-attribute"/>
            </optional>
            <optional>
                <ref name="lang-attribute"/>
            </optional>
            <interleave>
                <ref name="projectId-element"/>
                <ref name="access-element"/>
                <oneOrMore>
                    <ref name="p-element"/>
                </oneOrMore>
            </interleave>
        </element>
    </define>



    <define name="lang-attribute" ns="http://www.w3.org/XML/1998/namespace">
        <attribute name="xml:lang">

            <xs:annotation>
                <xs:appinfo>

                    <interface-field
                        path="entity/description/existDates/dateSingle/note/@xml:lang">
                        <help-text xml:lang="en">Optional; pick a language from
                            the list. If blank, English is assumed.</help-text>
                        <label xml:lang="en">Language</label>
                        <input>dropDown</input>
                        <value>http://www.loc.gov/standards/iso639-2/ISO-639-2_8859-1.txt</value>
                    </interface-field>

                    <interface-field
                        path="entity/description/existDates/dateRange/note/@xml:lang">
                        <help-text xml:lang="en">Optional; pick a language from
                            the list. If blank, English is assumed.</help-text>
                        <label xml:lang="en">Language</label>
                        <input>dropDown</input>
                        <values>http://www.loc.gov/standards/iso639-2/ISO-639-2_8859-1.txt</values>
                        <default>en</default>
                    </interface-field>

                </xs:appinfo>
            </xs:annotation>
            <choice>
                <value a:en="english">english</value>
                <value a:en="french">french</value>
                <value a:en="spanish">spanish</value>
            </choice>
            <data type="language"/>
        </attribute>
    </define>



    <define name="variantForms-element">
        <element name="variantForms">
            <oneOrMore>
                <ref name="variant-element"/>
            </oneOrMore>
        </element>
    </define>



    <define name="variant-element">
        <element name="variant">

            <xs:annotation>
                <xs:appinfo>
                    
                    <interface-field path="entity/identity/variantForms/variant">
                        <help-text xml:lang="en">If known, indicate one or more
                            alternative name forms used to refer to this
                            entity.</help-text>
                        <label xml:lang="en">Variant Names</label>
                        <input xml:id="variant-element" label="Add">dialogue</input>
                    </interface-field>
                    
                </xs:appinfo>                
            </xs:annotation>

            <interleave>
                <oneOrMore>
                    <ref name="namePart-element"/>
                </oneOrMore>
                <zeroOrMore>
                    <!-- mpo: check if zeroOrMore or oneOrMore -->
                    <ref name="variantType-element"/>
                </zeroOrMore>
                <optional>
                    <ref name="authorizedBy-element"/>
                </optional>
            </interleave>
        </element>
    </define>



    <define name="authorizedBy-element">
        <element name="authorizedBy">
            <a:documentation>authorizedBy element registers projects that use a
                variant name as authorized or preferred form in their local
                context.</a:documentation>

            <oneOrMore>
                <choice>
                    <ref name="projectId-element"/>
                    <ref name="link-element"/>
                </choice>
            </oneOrMore>
        </element>
    </define>



    <define name="link-element">
        <element name="link">
            <optional>
                <ref name="id-attribute"/>
            </optional>
            <data type="anyURI"/>
        </element>
    </define>

    <xs:annotation>
        <xs:appinfo>


            <interface>

                <interface-order type="person-main">

                    <interface-section xml:idref="projectId-element"
                        path="entity/recordInfo/projectId"/>

                    <interface-section xml:idref="personType-element"
                        path="entity/identity/personTypes/personType"/>

                    <interface-section xml:idref="preferredForm-element"
                        path="entity/identity/preferredForm"/>

                    <interface-section xml:idref="sameAs-element"
                        path="entity/identity/sameAs"/>

                    <interface-section xml:idref="variant-element"
                        path="entity/identity/variantForms/variant"/>

                    <interface-section xml:idref="existDates-element"
                        path="entity/description/existDates"/>
                    
                    <interface-section xml:idref="note-element"
                        path="entity/description/descriptiveNotes/note"/>

                </interface-order>

            </interface>
            

        </xs:appinfo>
    </xs:annotation>

</grammar>